[
    {
        "id": "a1cd85b06408ace3",
        "type": "subflow",
        "name": "week0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 340,
                "wires": [
                    {
                        "id": "b8fe5a699bf2bebd"
                    },
                    {
                        "id": "3eab418ac6f96a54"
                    },
                    {
                        "id": "7f36fd23aa553b31"
                    },
                    {
                        "id": "b965f77390abd9c1"
                    },
                    {
                        "id": "e25c2057a7b1f9a3"
                    },
                    {
                        "id": "9ce742c9919f0f2c"
                    },
                    {
                        "id": "cf2fc1816036bc6a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 380,
                "wires": [
                    {
                        "id": "99c33b337ae70665",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b8fe5a699bf2bebd",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 0 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 1) == 1)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 200,
        "wires": [
            [
                "ec90d57d7e0c1429"
            ]
        ]
    },
    {
        "id": "3eab418ac6f96a54",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 1 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 2) == 2)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 260,
        "wires": [
            [
                "8fd4b002e7abde05"
            ]
        ]
    },
    {
        "id": "7f36fd23aa553b31",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 2 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 4) == 4)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "9b14b43497c1b56d"
            ]
        ]
    },
    {
        "id": "b965f77390abd9c1",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 3 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 8) == 8)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 380,
        "wires": [
            [
                "813c3d505b76219d"
            ]
        ]
    },
    {
        "id": "e25c2057a7b1f9a3",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 4 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 16) == 16)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 440,
        "wires": [
            [
                "e7c21e3821ffad5e"
            ]
        ]
    },
    {
        "id": "9ce742c9919f0f2c",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 5 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 32) == 32)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 500,
        "wires": [
            [
                "64f9aa0f43816339"
            ]
        ]
    },
    {
        "id": "cf2fc1816036bc6a",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "DosoWeek0, day 6 set",
        "func": "context.set(\"DosoWeek0\", msg.payload);\nif ((msg.payload & 64) == 64)\n    msg.payload = true\nelse\n    msg.payload = false\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 560,
        "wires": [
            [
                "ab55d390a5cbbf38"
            ]
        ]
    },
    {
        "id": "ec90d57d7e0c1429",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d0",
        "order": 13,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-0\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n        <div id=\"checkbox-text\"\n            style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n            Su</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[0] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 0});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "8fd4b002e7abde05",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d1",
        "order": 14,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-1\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        Mo</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[1] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 1});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 260,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "9b14b43497c1b56d",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d2",
        "order": 15,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-2\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        Tu</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[2] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 2});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 320,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "813c3d505b76219d",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d3",
        "order": 16,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-3\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        We</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[3] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 3});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "e7c21e3821ffad5e",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d4",
        "order": 17,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-4\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        Th</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[4] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 4});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 440,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "64f9aa0f43816339",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d5",
        "order": 18,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-5\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        Fr</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[5] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 5});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "ab55d390a5cbbf38",
        "type": "ui_template",
        "z": "a1cd85b06408ace3",
        "group": "4dbe3bc81b4437fa",
        "name": "w0d6",
        "order": 19,
        "width": 1,
        "height": 1,
        "format": "<div id=\"checkbox-container-6\"\n    style=\"position:relative; width:30px; height:30px; background-color: {{ checked ? 'lightgreen' : 'darkgreen' }}; border-radius: 50%; cursor: pointer;\"\n    ng-click=\"toggleCheckbox()\">\n    <div id=\"checkbox-text\"\n        style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%); font-size:14px; color: {{ checked ? 'black' : 'white' }};\">\n        Sa</div>\n    <input type=\"hidden\" ng-model=\"checked\" ng-init=\"checked = flow.get('checkboxes')[6] || false\">\n</div>\n\n<script>\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) {\n                scope.checked = msg.payload;\n            }\n        });\n\n        scope.toggleCheckbox = function() {\n            scope.checked = !scope.checked;\n            scope.send({payload: scope.checked, id: 6});\n        };\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 870,
        "y": 560,
        "wires": [
            [
                "99c33b337ae70665"
            ]
        ]
    },
    {
        "id": "99c33b337ae70665",
        "type": "function",
        "z": "a1cd85b06408ace3",
        "name": "function 3",
        "func": "var checkboxes = flow.get(\"checkboxes\") || {};\n\nif (msg.payload !== undefined && msg.id !== undefined) {\n    checkboxes[msg.id] = msg.payload;\n}\n\nObject.keys(checkboxes).forEach(function (key) {\n    if (checkboxes[key] === undefined || checkboxes[key] === null) {\n        delete checkboxes[key];\n    }\n});\n\nflow.set(\"checkboxes\", checkboxes);\n\nvar sum = 0;\nObject.keys(checkboxes).forEach(function (key) {\n    if (checkboxes[key]) {\n        sum += Math.pow(2, key);\n    }\n});\n\nreturn [{ payload: sum }, null];\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "07513b2b84b8b6dc",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "1669a0da54551338",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "9a6127c9bcaaa196",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "1669a0da54551338",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7dc16668459c4865",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "db4e6c9f18e3d226",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c03d6f14f1788468",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 8,
        "width": 10,
        "height": 1
    },
    {
        "id": "5042a35e577ff975",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "d9d00f51e141ab1c",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 25,
        "width": 10,
        "height": 1
    },
    {
        "id": "32cce0a0340603f1",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 26,
        "width": 10,
        "height": 1
    },
    {
        "id": "92577eb28272201b",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 27,
        "width": 10,
        "height": 1
    },
    {
        "id": "89113a7b2d98738d",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 36,
        "width": 10,
        "height": 1
    },
    {
        "id": "25567a3ba2212599",
        "type": "ui_spacer",
        "z": "a1cd85b06408ace3",
        "name": "spacer",
        "group": "4dbe3bc81b4437fa",
        "order": 45,
        "width": 10,
        "height": 1
    },
    {
        "id": "4dbe3bc81b4437fa",
        "type": "ui_group",
        "name": "Metering",
        "tab": "34afc2e6f630c01e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1669a0da54551338",
        "type": "ui_group",
        "name": "pH & ORP",
        "tab": "8d7e51824dab2a8a",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "34afc2e6f630c01e",
        "type": "ui_tab",
        "name": "Metering pumps",
        "icon": "fa-tint",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8d7e51824dab2a8a",
        "type": "ui_tab",
        "name": "Probes",
        "icon": "fa-heartbeat",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "edc63042296c25e9",
        "type": "inject",
        "z": "23fd314c75632b34",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "da91f28b286b9c75"
            ]
        ]
    },
    {
        "id": "d123246c847e77ce",
        "type": "inject",
        "z": "23fd314c75632b34",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "7",
        "payloadType": "num",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "da91f28b286b9c75"
            ]
        ]
    },
    {
        "id": "4b37ff5551413f06",
        "type": "inject",
        "z": "23fd314c75632b34",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "16",
        "payloadType": "num",
        "x": 170,
        "y": 960,
        "wires": [
            [
                "da91f28b286b9c75"
            ]
        ]
    },
    {
        "id": "da91f28b286b9c75",
        "type": "subflow:a1cd85b06408ace3",
        "z": "23fd314c75632b34",
        "name": "",
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "34deb0551293d030",
                "b4bb9242a2f5856c"
            ]
        ]
    },
    {
        "id": "b4bb9242a2f5856c",
        "type": "debug",
        "z": "23fd314c75632b34",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 960,
        "wires": []
    }
]